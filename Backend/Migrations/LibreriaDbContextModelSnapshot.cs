// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(LibreriaDbContext))]
    partial class LibreriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Autor__3214EC2754B1440E");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarritoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarritoId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<DateTime>("FechaCarrito")
                        .HasColumnType("DATE")
                        .HasColumnName("FechaCarrito");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoId");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    b.HasKey("CarritoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carrito", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("Id")
                        .HasName("PK__Compra__3214EC271196A7B9");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Detalle", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetalleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("CantidadCompra")
                        .HasColumnType("int")
                        .HasColumnName("CantidadCompra");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("Impuesto");

                    b.Property<int>("MaestroId")
                        .HasColumnType("int")
                        .HasColumnName("MaestroId");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("PrecioCompra");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoId");

                    b.HasKey("DetalleId");

                    b.ToTable("Detalle", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Formato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Formato__3214EC270B657CBC");

                    b.ToTable("Formato", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Genero__3214EC27A504320E");

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutorId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("AutorID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FormatoId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("FormatoID");

                    b.Property<int?>("GeneroId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("GeneroID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("RutaFoto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Libro__3214EC27CA88560F");

                    b.HasIndex("AutorId");

                    b.HasIndex("FormatoId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Libro", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Maestro", b =>
                {
                    b.Property<int>("MaestroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaestroId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaestroId"));

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("DATE")
                        .HasColumnName("FechaCompra");

                    b.Property<decimal>("TotalFactura")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("TotalFactura");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioId");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("int");

                    b.HasKey("MaestroId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Maestro", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Rol__3214EC27E94B9CA0");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Tarjetum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CVV");

                    b.Property<DateOnly>("FechaExpiracion")
                        .HasColumnType("date");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("Id")
                        .HasName("PK__Tarjeta__3214EC279D7AD610");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tarjeta");
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3214EC27BC564FD1");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Carrito", b =>
                {
                    b.HasOne("Backend.Models.Libro", null)
                        .WithMany("Carritos")
                        .HasForeignKey("ProductoId");

                    b.HasOne("Backend.Models.Usuario", null)
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.Compra", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Compra_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Backend.Models.Libro", b =>
                {
                    b.HasOne("Backend.Models.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Libro_Autor");

                    b.HasOne("Backend.Models.Formato", "Formato")
                        .WithMany("Libros")
                        .HasForeignKey("FormatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Libro_Formato");

                    b.HasOne("Backend.Models.Genero", "Genero")
                        .WithMany("Libros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Libro_Genero");

                    b.Navigation("Autor");

                    b.Navigation("Formato");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Backend.Models.Maestro", b =>
                {
                    b.HasOne("Backend.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Backend.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Backend.Models.Tarjetum", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Usuario")
                        .WithMany("Tarjeta")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Tarjeta_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.HasOne("Backend.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Backend.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Backend.Models.Formato", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Backend.Models.Genero", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Backend.Models.Libro", b =>
                {
                    b.Navigation("Carritos");
                });

            modelBuilder.Entity("Backend.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Compras");

                    b.Navigation("Tarjeta");
                });
#pragma warning restore 612, 618
        }
    }
}
